// Code generated by "stringer -linecomment -output regex_string.go -type regexFlag"; DO NOT EDIT.

package ast

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[regexICase-1]
	_ = x[regexDotAll-2]
	_ = x[regexMLine-4]
	_ = x[regexWSpace-8]
	_ = x[regexQuote-16]
}

const (
	_regexFlag_name_0 = "is"
	_regexFlag_name_1 = "m"
	_regexFlag_name_2 = "x"
	_regexFlag_name_3 = "q"
)

var (
	_regexFlag_index_0 = [...]uint8{0, 1, 2}
)

func (i regexFlag) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _regexFlag_name_0[_regexFlag_index_0[i]:_regexFlag_index_0[i+1]]
	case i == 4:
		return _regexFlag_name_1
	case i == 8:
		return _regexFlag_name_2
	case i == 16:
		return _regexFlag_name_3
	default:
		return "regexFlag(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
